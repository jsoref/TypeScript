=== tests/cases/conformance/expressions/typeGuards/typeGuardTautologicalConsistency.ts ===
let stringOrNumber: string | number;
>stringOrNumber : Symbol(stringOrNumber, Decl(typeGuardTautologicalConsistency.ts, 0, 3))

if (typeof stringOrNumber === "number") {
>stringOrNumber : Symbol(stringOrNumber, Decl(typeGuardTautologicalConsistency.ts, 0, 3))

    if (typeof stringOrNumber !== "number") {
>stringOrNumber : Symbol(stringOrNumber, Decl(typeGuardTautologicalConsistency.ts, 0, 3))

        stringOrNumber;
>stringOrNumber : Symbol(stringOrNumber, Decl(typeGuardTautologicalConsistency.ts, 0, 3))
    }
}

if (typeof stringOrNumber === "number" && typeof stringOrNumber !== "number") {
>stringOrNumber : Symbol(stringOrNumber, Decl(typeGuardTautologicalConsistency.ts, 0, 3))
>stringOrNumber : Symbol(stringOrNumber, Decl(typeGuardTautologicalConsistency.ts, 0, 3))

    stringOrNumber;
>stringOrNumber : Symbol(stringOrNumber, Decl(typeGuardTautologicalConsistency.ts, 0, 3))
}

